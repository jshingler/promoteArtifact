# https://github.com/patrickcrocker/maven-resource
resource_types:
  - name: maven-resource
    type: docker-image
    source:
      #repository: patrickcrocker/maven-resource
      repository: {{MAVEN_RESOURCE}}
      tag: latest
      insecure_registries: [ {{DOCKER_REGISTRY}} ]

resources:
  - name: source-code
    type: git
    source:
      uri: {{GIT_REPO}}
      branch: {{GIT_BRANCH}}

  # - name: deploy-test-app
  #   type: cf
  #   source:
  #     api: {{CF_API}}
  #     username: {{CF_USER}}
  #     password: {{CF_PASS}}
  #     organization: {{CF_TEST_ORG}}
  #     space: {{CF_TEST_SPACE}}
  #     skip_cert_check: true

  - name: deploy-dev-app
    type: cf
    source:
      api: {{CF_API}}
      username: {{CF_USER}}
      password: {{CF_PASS}}
      organization: {{CF_DEV_ORG}}
      space: {{CF_DEV_SPACE}}
      skip_cert_check: true

  - name: build-artifact-jar
    type: maven-resource
    source:
      ##url: {{MAVEN_REPO}}
      url: http://192.168.1.122:8081/repository/maven-releases/
      artifact: com.example:spring-music:war
      username: {{MAVEN_USERNAME}}
      password: {{MAVEN_PASSWORD}}
      # skip_cert_check: true


jobs:
  - name: unit-tests
    plan:
    - get: source-code
      trigger: true
    - task: run-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            #repository: 192.168.1.122:5000/gradle
            repository: {{GRADLE_RESOURCE}}
            tag: latest
            insecure_registries: [ {{DOCKER_REGISTRY}}]
        inputs:
          - name: source-code
        outputs:
          - name: build
        params:
          SONAR: {{SONAR}}
          myIP: {{myIP}}
        run:
          # path: "source-code/gradlew"
          # args: ["--build-file", "source-code/build.gradle", "assemble", "test"]
          path: "source-code/ci/tasks/unit.sh"
          user: root

    # - task: run-tests
    #   privileged: true
    #   file: source-code/ci/tasks/unit.yml
    #   params:
    #     SONAR: {{SONAR}}
    #     myIP: {{myIP}}
    #     DOCKER_REGISTRY: {{DOCKER_REGISTRY}}
    #     GRADLE_RESOURCE: {{GRADLE_RESOURCE}}

  - name: package-publish
    plan:
    - get: source-code
      passed: [ unit-tests ]
      trigger: true
    - task: package
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: {{GRADLE_RESOURCE}}
            tag: latest
            insecure_registries: [ {{DOCKER_REGISTRY}} ]
        inputs:
          - name: source-code
        outputs:
          - name: build
        params:
          # MAVEN_REPO: {{MAVEN_REPO}}
          myIP: {{myIP}}
        run:
          path: "source-code/ci/tasks/package.sh"
          user: root

    - put: build-artifact-jar
      params:
        file: build/spring-music.war
        pom_file: source-code/pom.xml
        version_file: source-code/version
    # - task: package
    #   file: source-code/ci/tasks/package.yml
    #   params:
    #     MAVEN_REPO: {{MAVEN_REPO}}
    #     myIP: {{myIP}}
    #     DOCKER_REGISTRY: {{DOCKER_REGISTRY}}
    #     GRADLE_RESOURCE: {{GRADLE_RESOURCE}}

  - name: deploy-to-dev
    plan:
    - get: source-code
      passed: [ package-publish]
      trigger: true
    - get: build-artifact-jar
    - put: deploy-dev-app
      params:
        manifest: source-code/manifest.yml
        current_app_name: spring-music
        path: build-artifact-jar/spring-musi*.war
